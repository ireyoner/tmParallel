// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// Cpp_dtm_original_mem_test
List Cpp_dtm_original_mem_test(const StringVector strings_, const int& min_term_freq, const int& max_term_freq, const unsigned int& min_word_length, const unsigned int& max_word_length, const unsigned int& vectors_resize_size, const unsigned int& vectors_resize_treshhold, const unsigned int& terms_resize_size, const unsigned int& terms_resize_treshhold);
RcppExport SEXP tmParallel_Cpp_dtm_original_mem_test(SEXP strings_SEXP, SEXP min_term_freqSEXP, SEXP max_term_freqSEXP, SEXP min_word_lengthSEXP, SEXP max_word_lengthSEXP, SEXP vectors_resize_sizeSEXP, SEXP vectors_resize_treshholdSEXP, SEXP terms_resize_sizeSEXP, SEXP terms_resize_treshholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const StringVector >::type strings_(strings_SEXP);
    Rcpp::traits::input_parameter< const int& >::type min_term_freq(min_term_freqSEXP);
    Rcpp::traits::input_parameter< const int& >::type max_term_freq(max_term_freqSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type min_word_length(min_word_lengthSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type max_word_length(max_word_lengthSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type vectors_resize_size(vectors_resize_sizeSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type vectors_resize_treshhold(vectors_resize_treshholdSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type terms_resize_size(terms_resize_sizeSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type terms_resize_treshhold(terms_resize_treshholdSEXP);
    rcpp_result_gen = Rcpp::wrap(Cpp_dtm_original_mem_test(strings_, min_term_freq, max_term_freq, min_word_length, max_word_length, vectors_resize_size, vectors_resize_treshhold, terms_resize_size, terms_resize_treshhold));
    return rcpp_result_gen;
END_RCPP
}
// Cpp_dtm_original
List Cpp_dtm_original(const StringVector strings_, const int& min_term_freq, const int& max_term_freq, const unsigned int& min_word_length, const unsigned int& max_word_length, const unsigned int& vectors_resize_size, const unsigned int& vectors_resize_treshhold, const unsigned int& terms_resize_size, const unsigned int& terms_resize_treshhold);
RcppExport SEXP tmParallel_Cpp_dtm_original(SEXP strings_SEXP, SEXP min_term_freqSEXP, SEXP max_term_freqSEXP, SEXP min_word_lengthSEXP, SEXP max_word_lengthSEXP, SEXP vectors_resize_sizeSEXP, SEXP vectors_resize_treshholdSEXP, SEXP terms_resize_sizeSEXP, SEXP terms_resize_treshholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const StringVector >::type strings_(strings_SEXP);
    Rcpp::traits::input_parameter< const int& >::type min_term_freq(min_term_freqSEXP);
    Rcpp::traits::input_parameter< const int& >::type max_term_freq(max_term_freqSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type min_word_length(min_word_lengthSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type max_word_length(max_word_lengthSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type vectors_resize_size(vectors_resize_sizeSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type vectors_resize_treshhold(vectors_resize_treshholdSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type terms_resize_size(terms_resize_sizeSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type terms_resize_treshhold(terms_resize_treshholdSEXP);
    rcpp_result_gen = Rcpp::wrap(Cpp_dtm_original(strings_, min_term_freq, max_term_freq, min_word_length, max_word_length, vectors_resize_size, vectors_resize_treshhold, terms_resize_size, terms_resize_treshhold));
    return rcpp_result_gen;
END_RCPP
}
// Cpp_dtm_parallel_mem_test
List Cpp_dtm_parallel_mem_test(const StringVector& strings_, const int& min_term_freq, const int& max_term_freq, const unsigned int& min_word_length, const unsigned int& max_word_length, const unsigned int& vectors_resize_size, const unsigned int& vectors_resize_threshold, const unsigned int& terms_resize_size, const unsigned int& terms_resize_threshold);
RcppExport SEXP tmParallel_Cpp_dtm_parallel_mem_test(SEXP strings_SEXP, SEXP min_term_freqSEXP, SEXP max_term_freqSEXP, SEXP min_word_lengthSEXP, SEXP max_word_lengthSEXP, SEXP vectors_resize_sizeSEXP, SEXP vectors_resize_thresholdSEXP, SEXP terms_resize_sizeSEXP, SEXP terms_resize_thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const StringVector& >::type strings_(strings_SEXP);
    Rcpp::traits::input_parameter< const int& >::type min_term_freq(min_term_freqSEXP);
    Rcpp::traits::input_parameter< const int& >::type max_term_freq(max_term_freqSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type min_word_length(min_word_lengthSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type max_word_length(max_word_lengthSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type vectors_resize_size(vectors_resize_sizeSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type vectors_resize_threshold(vectors_resize_thresholdSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type terms_resize_size(terms_resize_sizeSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type terms_resize_threshold(terms_resize_thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(Cpp_dtm_parallel_mem_test(strings_, min_term_freq, max_term_freq, min_word_length, max_word_length, vectors_resize_size, vectors_resize_threshold, terms_resize_size, terms_resize_threshold));
    return rcpp_result_gen;
END_RCPP
}
// Cpp_dtm_parallel
List Cpp_dtm_parallel(const StringVector& strings_, const int& min_term_freq, const int& max_term_freq, const unsigned int& min_word_length, const unsigned int& max_word_length, const unsigned int& vectors_resize_size, const unsigned int& vectors_resize_threshold, const unsigned int& terms_resize_size, const unsigned int& terms_resize_threshold);
RcppExport SEXP tmParallel_Cpp_dtm_parallel(SEXP strings_SEXP, SEXP min_term_freqSEXP, SEXP max_term_freqSEXP, SEXP min_word_lengthSEXP, SEXP max_word_lengthSEXP, SEXP vectors_resize_sizeSEXP, SEXP vectors_resize_thresholdSEXP, SEXP terms_resize_sizeSEXP, SEXP terms_resize_thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const StringVector& >::type strings_(strings_SEXP);
    Rcpp::traits::input_parameter< const int& >::type min_term_freq(min_term_freqSEXP);
    Rcpp::traits::input_parameter< const int& >::type max_term_freq(max_term_freqSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type min_word_length(min_word_lengthSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type max_word_length(max_word_lengthSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type vectors_resize_size(vectors_resize_sizeSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type vectors_resize_threshold(vectors_resize_thresholdSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type terms_resize_size(terms_resize_sizeSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type terms_resize_threshold(terms_resize_thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(Cpp_dtm_parallel(strings_, min_term_freq, max_term_freq, min_word_length, max_word_length, vectors_resize_size, vectors_resize_threshold, terms_resize_size, terms_resize_threshold));
    return rcpp_result_gen;
END_RCPP
}
// Cpp_dtm_parallel_Lists_mem_test
List Cpp_dtm_parallel_Lists_mem_test(const StringVector& strings_, const int& min_term_freq, const int& max_term_freq, const unsigned int& min_word_length, const unsigned int& max_word_length, const unsigned int& vectors_resize_size, const unsigned int& vectors_resize_treshhold, const unsigned int& terms_resize_size, const unsigned int& terms_resize_treshhold);
RcppExport SEXP tmParallel_Cpp_dtm_parallel_Lists_mem_test(SEXP strings_SEXP, SEXP min_term_freqSEXP, SEXP max_term_freqSEXP, SEXP min_word_lengthSEXP, SEXP max_word_lengthSEXP, SEXP vectors_resize_sizeSEXP, SEXP vectors_resize_treshholdSEXP, SEXP terms_resize_sizeSEXP, SEXP terms_resize_treshholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const StringVector& >::type strings_(strings_SEXP);
    Rcpp::traits::input_parameter< const int& >::type min_term_freq(min_term_freqSEXP);
    Rcpp::traits::input_parameter< const int& >::type max_term_freq(max_term_freqSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type min_word_length(min_word_lengthSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type max_word_length(max_word_lengthSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type vectors_resize_size(vectors_resize_sizeSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type vectors_resize_treshhold(vectors_resize_treshholdSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type terms_resize_size(terms_resize_sizeSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type terms_resize_treshhold(terms_resize_treshholdSEXP);
    rcpp_result_gen = Rcpp::wrap(Cpp_dtm_parallel_Lists_mem_test(strings_, min_term_freq, max_term_freq, min_word_length, max_word_length, vectors_resize_size, vectors_resize_treshhold, terms_resize_size, terms_resize_treshhold));
    return rcpp_result_gen;
END_RCPP
}
// Cpp_dtm_parallel_Lists
List Cpp_dtm_parallel_Lists(const StringVector& strings_, const int& min_term_freq, const int& max_term_freq, const unsigned int& min_word_length, const unsigned int& max_word_length, const unsigned int& vectors_resize_size, const unsigned int& vectors_resize_treshhold, const unsigned int& terms_resize_size, const unsigned int& terms_resize_treshhold);
RcppExport SEXP tmParallel_Cpp_dtm_parallel_Lists(SEXP strings_SEXP, SEXP min_term_freqSEXP, SEXP max_term_freqSEXP, SEXP min_word_lengthSEXP, SEXP max_word_lengthSEXP, SEXP vectors_resize_sizeSEXP, SEXP vectors_resize_treshholdSEXP, SEXP terms_resize_sizeSEXP, SEXP terms_resize_treshholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const StringVector& >::type strings_(strings_SEXP);
    Rcpp::traits::input_parameter< const int& >::type min_term_freq(min_term_freqSEXP);
    Rcpp::traits::input_parameter< const int& >::type max_term_freq(max_term_freqSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type min_word_length(min_word_lengthSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type max_word_length(max_word_lengthSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type vectors_resize_size(vectors_resize_sizeSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type vectors_resize_treshhold(vectors_resize_treshholdSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type terms_resize_size(terms_resize_sizeSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type terms_resize_treshhold(terms_resize_treshholdSEXP);
    rcpp_result_gen = Rcpp::wrap(Cpp_dtm_parallel_Lists(strings_, min_term_freq, max_term_freq, min_word_length, max_word_length, vectors_resize_size, vectors_resize_treshhold, terms_resize_size, terms_resize_treshhold));
    return rcpp_result_gen;
END_RCPP
}
// mem_test
List mem_test();
RcppExport SEXP tmParallel_mem_test() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(mem_test());
    return rcpp_result_gen;
END_RCPP
}
// R_Cpp_transition_test
List R_Cpp_transition_test(const StringVector terms, const int out_vectors_length);
RcppExport SEXP tmParallel_R_Cpp_transition_test(SEXP termsSEXP, SEXP out_vectors_lengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const StringVector >::type terms(termsSEXP);
    Rcpp::traits::input_parameter< const int >::type out_vectors_length(out_vectors_lengthSEXP);
    rcpp_result_gen = Rcpp::wrap(R_Cpp_transition_test(terms, out_vectors_length));
    return rcpp_result_gen;
END_RCPP
}
// TfIdfParallel
std::vector<double> TfIdfParallel(const std::vector<double>& word_, const std::vector<double>& text_, const std::vector<double>& count_, const unsigned int termsCount_, const unsigned int documentCount_, bool normalizeTf, bool IdfPlus1);
RcppExport SEXP tmParallel_TfIdfParallel(SEXP word_SEXP, SEXP text_SEXP, SEXP count_SEXP, SEXP termsCount_SEXP, SEXP documentCount_SEXP, SEXP normalizeTfSEXP, SEXP IdfPlus1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type word_(word_SEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type text_(text_SEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type count_(count_SEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type termsCount_(termsCount_SEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type documentCount_(documentCount_SEXP);
    Rcpp::traits::input_parameter< bool >::type normalizeTf(normalizeTfSEXP);
    Rcpp::traits::input_parameter< bool >::type IdfPlus1(IdfPlus1SEXP);
    rcpp_result_gen = Rcpp::wrap(TfIdfParallel(word_, text_, count_, termsCount_, documentCount_, normalizeTf, IdfPlus1));
    return rcpp_result_gen;
END_RCPP
}
